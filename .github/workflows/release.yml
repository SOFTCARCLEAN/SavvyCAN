name: Build and Release Installer

on:
  push:
    branches: [ main, master, ci-test ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  prepare-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate daily incremental tag
        id: set-version
        run: |
          TODAY=$(date +'%y.%m.%d')
          COUNT=$(git tag --list "${TODAY}.*" | wc -l)
          COUNT=$((COUNT+1))
          TAG="${TODAY}-${COUNT}"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "::set-output name=tag::$TAG"

      - name: Update VERSION in config.h
        run: |
          sed -i 's/#define VERSION.*/#define VERSION "${{ env.TAG }}"/' config.h

      - name: Commit updated version
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add config.h
          git commit -m "Update version to ${{ env.TAG }}"
          git push

  build-windows:
    needs: prepare-version
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '5.15.2'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_mingw81'
          cache: true

      - name: Install Inno Setup
        run: choco install innosetup -y

      - name: Build Project
        run: |
          qmake
          mingw32-make

      - name: Deploy Application with windeployqt
        run: windeployqt --verbose=2 bin/SavvyCAN.exe

      - name: Build Installer with Inno Setup
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" "/DMyAppVersion=${{ needs.prepare-version.outputs.version }}" "setup.iss"

      - name: Upload installer artifact
        uses: actions/upload-artifact@v3
        with:
          name: SavvyCAN-installer
          path: ./Output/SavvyCAN_${{ needs.prepare-version.outputs.version }}_Setup.exe

  create-release:
    needs: build-windows
    runs-on: ubuntu-latest
    steps:
      - name: Download installer artifact
        uses: actions/download-artifact@v3
        with:
          name: SavvyCAN-installer
          path: ./release/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ needs.prepare-version.outputs.version }}"
          name: "Release v${{ needs.prepare-version.outputs.version }}"
          files: ./release/*