name: Build and Release Windows Installer

on:
  push:
    tags:
      - 'v*'  # Déclenche le workflow uniquement lorsqu'un tag versionné est poussé

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout latest commit from master
        uses: actions/checkout@v3
        with:
          ref: master  # On force le checkout sur la branche master
          fetch-depth: 0  # Permet d'avoir l'historique complet des commits pour éviter les conflits

      - name: Display latest commit
        run: git log --oneline -n 5

      - name: Extract version from tag
        run: echo "VERSION=${{ github.ref_name }}" >> $env:GITHUB_ENV

      - name: Display version
        run: |
          echo "Version extraite: ${{ env.VERSION }}"

      - name: Update VERSION in config.h
        run: |
          sed -i 's/#define VERSION.*/#define VERSION "${{ env.VERSION }}"/' config.h
        shell: bash

      - name: Commit updated version
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add config.h
          git commit -m "Update version to ${{ env.VERSION }}"
          git push

      - name: Setup Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '5.15.2'  # ⚠️ Change cette version selon celle que tu utilises
          host: 'windows'
          target: 'desktop'
          arch: 'win64_mingw81'
          cache: true

      - name: Install Inno Setup
        run: choco install innosetup -y

      - name: Build Project
        run: |
          qmake
          mingw32-make

      - name: Deploy Application with windeployqt
        run: |
          windeployqt --verbose=2 bin/SavvyCAN.exe

      - name: List files in bin before Inno Setup
        run: |
          echo "Listing files in bin/ directory..."
          Get-ChildItem -Path bin/ -Recurse

      - name: Build Installer with Inno Setup
        run: |
          echo "Using version: ${{ env.VERSION }}"
          if (-not "${{ env.VERSION }}") { 
            echo "ERROR: VERSION is empty!"
            exit 1 
          }
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" "/DMyAppVersion=${{ env.VERSION }}" "setup.iss"

      - name: Upload Installer to Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./Output/SavvyCAN_${{ env.VERSION }}_Setup.exe
          token: ${{ secrets.GITHUB_TOKEN }}