name: Build and Release Windows Installer

on:
  push:
    tags:
      - 'v*'  # Déclenche le workflow uniquement lorsqu'un tag versionné est poussé

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract version from tag
        run: echo "VERSION=${{ github.ref_name }}" >> $env:GITHUB_ENV

      - name: Display version
        run: |
          echo "Version extraite: ${{ env.VERSION }}"
          echo "Version extraite: $env:VERSION"

      - name: Setup Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '5.15.2'  # ⚠️ Change cette version selon celle que tu utilises
          host: 'windows'
          target: 'desktop'
          arch: 'win64_mingw81'
          cache: true

      - name: Install Inno Setup
        run: choco install innosetup -y

      - name: Extract version from tag
        id: version
        run: |
          echo "Extracting version from GITHUB_REF..."
          echo "GITHUB_REF is: $GITHUB_REF"
          if ($GITHUB_REF -match "refs/tags/v(.+)") {
            echo "VERSION=$matches[1]" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "Extracted version: $matches[1]"
          } else {
            echo "ERROR: No version tag found!"
            exit 1
          }
          echo "Extracted version: ${GITHUB_REF#refs/tags/v}"

      - name: Build Installer with Inno Setup
        run: |
          echo "Using version: ${{ env.VERSION }}"
          if (-not "${{ env.VERSION }}") { 
            echo "ERROR: VERSION is empty!"
            exit 1 
          }
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" "/DMyAppVersion=${{ env.VERSION }}" "setup.iss"

      - name: Build Project
        run: |
          qmake
          mingw32-make

      - name: Deploy Application with windeployqt
        run: |
          windeployqt --verbose=2 bin/SavvyCAN.exe

      

      - name: Upload Installer to Release
        uses: softprops/action-gh-release@v1
        with:
          files: SavvyCAN_Setup.exe
          token: ${{ secrets.GITHUB_TOKEN }}